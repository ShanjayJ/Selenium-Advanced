<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="72612" started-at="2018-01-07T09:59:24Z" finished-at="2018-01-07T10:00:36Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="72612" started-at="2018-01-07T09:59:24Z" finished-at="2018-01-07T10:00:36Z">
      <class name="com.vmetry.reports.ExtentReport">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.vmetry.reports.ExtentReport@4eb7f003]" name="setUp" is-config="true" duration-ms="58772" started-at="2018-01-07T15:29:24Z" finished-at="2018-01-07T15:30:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="inputNoiseWord()[pri:0, instance:com.vmetry.reports.ExtentReport@4eb7f003]" name="inputNoiseWord" duration-ms="175" started-at="2018-01-07T15:30:22Z" finished-at="2018-01-07T15:30:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputNoiseWord -->
        <test-method status="PASS" signature="publish(org.testng.ITestResult)[pri:0, instance:com.vmetry.reports.ExtentReport@4eb7f003]" name="publish" is-config="true" duration-ms="124" started-at="2018-01-07T15:30:23Z" finished-at="2018-01-07T15:30:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inputNoiseWord status=SUCCESS method=ExtentReport.inputNoiseWord()[pri:0, instance:com.vmetry.reports.ExtentReport@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
        <test-method status="FAIL" signature="chooseSugg()[pri:1, instance:com.vmetry.reports.ExtentReport@4eb7f003]" name="chooseSugg" duration-ms="959" started-at="2018-01-07T15:30:23Z" finished-at="2018-01-07T15:30:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [haskell] but found [Haskell]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [haskell] but found [Haskell]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at org.testng.Assert.assertEquals(Assert.java:453)at org.testng.Assert.assertEquals(Assert.java:463)at com.vmetry.reports.ExtentReport.chooseSugg(ExtentReport.java:76)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chooseSugg -->
        <test-method status="PASS" signature="publish(org.testng.ITestResult)[pri:0, instance:com.vmetry.reports.ExtentReport@4eb7f003]" name="publish" is-config="true" duration-ms="140" started-at="2018-01-07T15:30:24Z" finished-at="2018-01-07T15:30:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chooseSugg status=FAILURE method=ExtentReport.chooseSugg()[pri:1, instance:com.vmetry.reports.ExtentReport@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.vmetry.reports.ExtentReport@4eb7f003]" name="tearDown" is-config="true" duration-ms="12397" started-at="2018-01-07T15:30:24Z" finished-at="2018-01-07T15:30:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.vmetry.reports.ExtentReport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
